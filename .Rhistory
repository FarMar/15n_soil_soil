library(tidyverse)
raw <- read_csv(results/raw/15n_soil_sol.csv)
raw <- read_csv(~/results/raw/15n_soil_sol.csv)
raw <- read_csv("~/results/raw/15n_soil_sol.csv")
raw <- read_csv("results/raw/15n_soil_sol.csv")
raw
knitr::opts_chunk$set(echo = TRUE)
raw <- read_csv("~/results/raw/15n_soil_sol.csv")
raw <- read_csv("~ /results/raw/15n_soil_sol.csv")
raw <- read_csv("~/results/raw/15n_soil_sol.csv")
raw <- read_csv("../results/raw/15n_soil_sol.csv")
```{r raw}
```{r}
raw_data <- read_csv("/results/raw/15n_soil_sol.csv")
raw_data
raw_data <- read_csv("/results/raw/15n_soil_sol.csv")
raw_data <- read_csv("/results/raw/15n_soil_sol.csv")
raw_data <- read_csv("../results/raw/15n_soil_sol.csv")
raw_data <- read_csv("/results/raw/15n_soil_sol.csv")
raw_data <- read_csv("results/raw/15n_soil_sol.csv")
raw_data
with_din <- mutate(raw_data, nh4 + no3)
with_din
rename(with_din, c("'nh4 + no3'"=din))
rename(with_din, c("'nh4 + no3'"="din"))
names(with_din)[11] <-din
names(with_din)[11] <- "din"
with_din
with_don <- mutate(with_din, tdn - din)
names(with_don)[12] <- "don"
with_don
##do we have any negatives?
count(with_don, don <= 0)
don_fixed <- pmax(with_don, 0)
count(don_fixed, don <= 0)
don_fixed <- pmax(with_don, NULL)
count(don_fixed, don <= 0)
View(don_fixed)
don_fixed <- pmax(with_don, <=0, NULL)
don_fixed <- pmax(with_don, <=0)
don_fixed <- pmax(with_don, 0)
count(don_fixed, don <= 0)
View(don_fixed)
minvalue <- 0
with_don.don[with_don.don < minvalue] <- minvalue
with_don[with_don < minvalue] <- minvalue
count(with_don, don <= 0)
don_fixed <- with_din %>%
mutate(don = tdn - din,
don_nz = case_when(
don >= 0 ~ don,
TRUE ~ 0
))
##do we have any negatives?
count(don_fixed, don <= 0)
View(don_fixed)
##do we have any negatives?
count(don_fixed, don_nz <= 0)
View(don_fixed)
##do we have any negatives?
count(don_fixed, don_nz < 0)
with_don <- with_din %>%
mutate(don = tdn - din,
don_nz = case_when(
don >= 0 ~ don,
TRUE ~ 0
))
##do we have any negatives?
count(with_don, don_nz < 0)
don_fixed <- select(with_don, -don)
names(don_fixed)[12] <- "don"
##make some ratios
mutate(don_fixed, doc_don = doc / don )
mutate(don_fixed, don_din = don / din )
##make some ratios
ratios <- mutate(don_fixed, doc_don = doc / don )
ratios <- mutate(don_fixed, don_din = don / din )
ratios
ratios <- mutate(don_fixed, doc_don = doc / don )
ratios <- mutate(ratios, don_din = don / din )
ratios
View(ratios)
##Now we have some Inf. these need to become NA
ratios2 <- ratios %>%
case_when(doc_don == Inf ~ doc_don,
TRUE ~ NA)
##Now we have some Inf. these need to become NA
ratios <- don_fixed %>%
mutate(doc_don = doc / don,
don_don = case_when(
don == Inf ~ doc_don,
TRUE ~ NA
))
##Now we have some Inf. these need to become NA
is.na(ratios) <- do.call(cbind,lapply(ratios, is.infinite))
ratios
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, results/processed/ratios.csv)
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, ./results/processed/ratios.csv)
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, ../processed/ratios.csv)
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, ratios.csv)
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, "../processed/ratios.csv")
##so, with clean data, all that's left to do is write the final .csv, then knitR
write_csv(ratios, "results/processed/ratios.csv")
